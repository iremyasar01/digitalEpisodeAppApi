// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using digitalEpisodeAppApi.Data;

#nullable disable

namespace digitalEpisodeAppApi.Migrations
{
    [DbContext(typeof(TvSeriesDbContext))]
    [Migration("20240827113331_news")]
    partial class news
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("digitalEpisodeAppApi.Models.EpisodeModel", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EpisodeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeId"));

                    b.Property<string>("EpisodeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EpisodeNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EpisodeOverview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vote")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("EpisodeId");

                    b.ToTable("Episodes", (string)null);
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.FavMoviesModel", b =>
                {
                    b.Property<int>("FavMoviesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FavMoviesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavMoviesId"));

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FavMoviesId");

                    b.HasIndex("MoviesId");

                    b.HasIndex("UserId");

                    b.ToTable("FavMovies", (string)null);
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.FavSeriesModel", b =>
                {
                    b.Property<int>("FavSeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FavSeriesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavSeriesId"));

                    b.Property<int>("TvShowId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FavSeriesId");

                    b.HasIndex("TvShowId");

                    b.HasIndex("UserId");

                    b.ToTable("FavSeries", (string)null);
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.MovieWatchModel", b =>
                {
                    b.Property<int>("MovieWatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MovieWatchId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieWatchId"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MovieWatchId");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("MovieWatch", (string)null);
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.MoviesModel", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MovieId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double>("movieCountry")
                        .HasColumnType("float");

                    b.Property<string>("movieOverview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterPath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("vote")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.SeriesWatchModel", b =>
                {
                    b.Property<int>("SeriesWatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SeriesWatchId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeriesWatchId"));

                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SeriesWatchId");

                    b.HasIndex("SeriesId");

                    b.HasIndex("UserId");

                    b.ToTable("SeriesWatch", (string)null);
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.TvShowsModel", b =>
                {
                    b.Property<int>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SeriesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeriesId"));

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeriesCountry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeriesOverview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesPosterPath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("SeriesVote")
                        .HasColumnType("float");

                    b.HasKey("SeriesId");

                    b.ToTable("TvShows", (string)null);
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.UsersModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordAgain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("phoneNumber")
                        .HasColumnType("float");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.FavMoviesModel", b =>
                {
                    b.HasOne("digitalEpisodeAppApi.Models.MoviesModel", "Movies")
                        .WithMany("FavMovies")
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("digitalEpisodeAppApi.Models.UsersModel", "Users")
                        .WithMany("FavMovies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.FavSeriesModel", b =>
                {
                    b.HasOne("digitalEpisodeAppApi.Models.TvShowsModel", "TvShows")
                        .WithMany("FavSeries")
                        .HasForeignKey("TvShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("digitalEpisodeAppApi.Models.UsersModel", "Users")
                        .WithMany("FavSeries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvShows");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.MovieWatchModel", b =>
                {
                    b.HasOne("digitalEpisodeAppApi.Models.MoviesModel", "Movies")
                        .WithMany("MovieWatch")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("digitalEpisodeAppApi.Models.UsersModel", "User")
                        .WithMany("MovieWatch")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("User");
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.SeriesWatchModel", b =>
                {
                    b.HasOne("digitalEpisodeAppApi.Models.TvShowsModel", "tvShows")
                        .WithMany("WatchSeries")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("digitalEpisodeAppApi.Models.UsersModel", "User")
                        .WithMany("SeriesWatch")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("tvShows");
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.MoviesModel", b =>
                {
                    b.Navigation("FavMovies");

                    b.Navigation("MovieWatch");
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.TvShowsModel", b =>
                {
                    b.Navigation("FavSeries");

                    b.Navigation("WatchSeries");
                });

            modelBuilder.Entity("digitalEpisodeAppApi.Models.UsersModel", b =>
                {
                    b.Navigation("FavMovies");

                    b.Navigation("FavSeries");

                    b.Navigation("MovieWatch");

                    b.Navigation("SeriesWatch");
                });
#pragma warning restore 612, 618
        }
    }
}
